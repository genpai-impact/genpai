//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.skill
{

public sealed partial class SkillItem :  Bright.Config.BeanBase 
{
    public SkillItem(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["SkillName"].IsString) { throw new SerializationException(); }  SkillName = _json["SkillName"]; }
        { if(!_json["SkillChara"].IsString) { throw new SerializationException(); }  SkillChara = _json["SkillChara"]; }
        { if(!_json["SkillType"].IsNumber) { throw new SerializationException(); }  SkillType = (effect.SkillType)_json["SkillType"].AsInt; }
        { if(!_json["SkillDesc"].IsString) { throw new SerializationException(); }  SkillDesc = _json["SkillDesc"]; }
        { if(!_json["Cost"].IsNumber) { throw new SerializationException(); }  Cost = _json["Cost"]; }
        { var _json1 = _json["EffectInfos"]; if(!_json1.IsArray) { throw new SerializationException(); } EffectInfos = new System.Collections.Generic.List<effect.EffectConstructProperties>(_json1.Count); foreach(JSONNode __e in _json1.Children) { effect.EffectConstructProperties __v;  { if(!__e.IsObject) { throw new SerializationException(); }  __v = effect.EffectConstructProperties.DeserializeEffectConstructProperties(__e); }  EffectInfos.Add(__v); }   }
        PostInit();
    }

    public SkillItem(int id, string SkillName, string SkillChara, effect.SkillType SkillType, string SkillDesc, int Cost, System.Collections.Generic.List<effect.EffectConstructProperties> EffectInfos ) 
    {
        this.Id = id;
        this.SkillName = SkillName;
        this.SkillChara = SkillChara;
        this.SkillType = SkillType;
        this.SkillDesc = SkillDesc;
        this.Cost = Cost;
        this.EffectInfos = EffectInfos;
        PostInit();
    }

    public static SkillItem DeserializeSkillItem(JSONNode _json)
    {
        return new skill.SkillItem(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 技能名称
    /// </summary>
    public string SkillName { get; private set; }
    /// <summary>
    /// 所属角色
    /// </summary>
    public string SkillChara { get; private set; }
    /// <summary>
    /// 技能类型
    /// </summary>
    public effect.SkillType SkillType { get; private set; }
    /// <summary>
    /// 补充描述
    /// </summary>
    public string SkillDesc { get; private set; }
    /// <summary>
    /// 所需充能
    /// </summary>
    public int Cost { get; private set; }
    public System.Collections.Generic.List<effect.EffectConstructProperties> EffectInfos { get; private set; }

    public const int __ID__ = 2076013959;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in EffectInfos) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in EffectInfos) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "SkillName:" + SkillName + ","
        + "SkillChara:" + SkillChara + ","
        + "SkillType:" + SkillType + ","
        + "SkillDesc:" + SkillDesc + ","
        + "Cost:" + Cost + ","
        + "EffectInfos:" + Bright.Common.StringUtil.CollectionToString(EffectInfos) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
