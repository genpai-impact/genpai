//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.level
{

/// <summary>
/// 用于描述奖励
/// </summary>
public sealed partial class Reward :  Bright.Config.BeanBase 
{
    public Reward(JSONNode _json) 
    {
        { if(!_json["reward_id"].IsNumber) { throw new SerializationException(); }  RewardId = _json["reward_id"]; }
        { if(!_json["count"].IsNumber) { throw new SerializationException(); }  Count = _json["count"]; }
        { if(!_json["desc"].IsString) { throw new SerializationException(); }  Desc = _json["desc"]; }
        PostInit();
    }

    public Reward(int reward_id, int count, string desc ) 
    {
        this.RewardId = reward_id;
        this.Count = count;
        this.Desc = desc;
        PostInit();
    }

    public static Reward DeserializeReward(JSONNode _json)
    {
        return new level.Reward(_json);
    }

    /// <summary>
    /// 奖励id
    /// </summary>
    public int RewardId { get; private set; }
    /// <summary>
    /// 奖励数量
    /// </summary>
    public int Count { get; private set; }
    /// <summary>
    /// 奖励描述
    /// </summary>
    public string Desc { get; private set; }

    public const int __ID__ = -65533703;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "RewardId:" + RewardId + ","
        + "Count:" + Count + ","
        + "Desc:" + Desc + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
