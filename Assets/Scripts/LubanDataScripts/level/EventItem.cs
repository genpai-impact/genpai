//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.level
{

public sealed partial class EventItem :  Bright.Config.BeanBase 
{
    public EventItem(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["EventName"].IsString) { throw new SerializationException(); }  EventName = _json["EventName"]; }
        { if(!_json["EventDesc"].IsString) { throw new SerializationException(); }  EventDesc = _json["EventDesc"]; }
        { var _json1 = _json["EventUnlockers"]; if(!_json1.IsArray) { throw new SerializationException(); } EventUnlockers = new System.Collections.Generic.List<level.LevelUnlocker>(_json1.Count); foreach(JSONNode __e in _json1.Children) { level.LevelUnlocker __v;  { if(!__e.IsObject) { throw new SerializationException(); }  __v = level.LevelUnlocker.DeserializeLevelUnlocker(__e); }  EventUnlockers.Add(__v); }   }
        { if(!_json["EventDialogID"].IsNumber) { throw new SerializationException(); }  EventDialogID = _json["EventDialogID"]; }
        PostInit();
    }

    public EventItem(int id, string EventName, string EventDesc, System.Collections.Generic.List<level.LevelUnlocker> EventUnlockers, int EventDialogID ) 
    {
        this.Id = id;
        this.EventName = EventName;
        this.EventDesc = EventDesc;
        this.EventUnlockers = EventUnlockers;
        this.EventDialogID = EventDialogID;
        PostInit();
    }

    public static EventItem DeserializeEventItem(JSONNode _json)
    {
        return new level.EventItem(_json);
    }

    /// <summary>
    /// 关卡ID
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 事件名称
    /// </summary>
    public string EventName { get; private set; }
    /// <summary>
    /// 事件描述
    /// </summary>
    public string EventDesc { get; private set; }
    public System.Collections.Generic.List<level.LevelUnlocker> EventUnlockers { get; private set; }
    /// <summary>
    /// 事件剧情
    /// </summary>
    public int EventDialogID { get; private set; }

    public const int __ID__ = 763821763;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in EventUnlockers) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in EventUnlockers) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "EventName:" + EventName + ","
        + "EventDesc:" + EventDesc + ","
        + "EventUnlockers:" + Bright.Common.StringUtil.CollectionToString(EventUnlockers) + ","
        + "EventDialogID:" + EventDialogID + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
