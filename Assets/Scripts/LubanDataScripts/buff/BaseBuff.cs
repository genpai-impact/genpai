//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.buff
{

public sealed partial class BaseBuff :  Bright.Config.BeanBase 
{
    public BaseBuff(JSONNode _json) 
    {
        { if(!_json["BaseBuffName"].IsString) { throw new SerializationException(); }  BaseBuffName = _json["BaseBuffName"]; }
        { if(!_json["BuffEffectType"].IsString) { throw new SerializationException(); }  BuffEffectType = _json["BuffEffectType"]; }
        { if(!_json["Deleteable"].IsBoolean) { throw new SerializationException(); }  Deleteable = _json["Deleteable"]; }
        { if(!_json["Increaseable"].IsBoolean) { throw new SerializationException(); }  Increaseable = _json["Increaseable"]; }
        { if(!_json["HaveLifeCycle"].IsBoolean) { throw new SerializationException(); }  HaveLifeCycle = _json["HaveLifeCycle"]; }
        { if(!_json["Initiative"].IsBoolean) { throw new SerializationException(); }  Initiative = _json["Initiative"]; }
        { if(!_json["InitiativeTime"].IsString) { throw new SerializationException(); }  InitiativeTime = _json["InitiativeTime"]; }
        { if(!_json["SelfDestruction"].IsBoolean) { throw new SerializationException(); }  SelfDestruction = _json["SelfDestruction"]; }
        { if(!_json["DestructionTime"].IsString) { throw new SerializationException(); }  DestructionTime = _json["DestructionTime"]; }
        { var _json1 = _json["ConstructProperties"]; if(!_json1.IsArray) { throw new SerializationException(); } ConstructProperties = new System.Collections.Generic.List<string>(_json1.Count); foreach(JSONNode __e in _json1.Children) { string __v;  { if(!__e.IsString) { throw new SerializationException(); }  __v = __e; }  ConstructProperties.Add(__v); }   }
        PostInit();
    }

    public BaseBuff(string BaseBuffName, string BuffEffectType, bool Deleteable, bool Increaseable, bool HaveLifeCycle, bool Initiative, string InitiativeTime, bool SelfDestruction, string DestructionTime, System.Collections.Generic.List<string> ConstructProperties ) 
    {
        this.BaseBuffName = BaseBuffName;
        this.BuffEffectType = BuffEffectType;
        this.Deleteable = Deleteable;
        this.Increaseable = Increaseable;
        this.HaveLifeCycle = HaveLifeCycle;
        this.Initiative = Initiative;
        this.InitiativeTime = InitiativeTime;
        this.SelfDestruction = SelfDestruction;
        this.DestructionTime = DestructionTime;
        this.ConstructProperties = ConstructProperties;
        PostInit();
    }

    public static BaseBuff DeserializeBaseBuff(JSONNode _json)
    {
        return new buff.BaseBuff(_json);
    }

    /// <summary>
    /// 基础Buff名称
    /// </summary>
    public string BaseBuffName { get; private set; }
    /// <summary>
    /// 对应程序功能接口名
    /// </summary>
    public string BuffEffectType { get; private set; }
    /// <summary>
    /// 是否可删除
    /// </summary>
    public bool Deleteable { get; private set; }
    /// <summary>
    /// 是否可叠层
    /// </summary>
    public bool Increaseable { get; private set; }
    /// <summary>
    /// 是否有持续时间
    /// </summary>
    public bool HaveLifeCycle { get; private set; }
    /// <summary>
    /// 是否主动触发
    /// </summary>
    public bool Initiative { get; private set; }
    /// <summary>
    /// 主动触发时间
    /// </summary>
    public string InitiativeTime { get; private set; }
    /// <summary>
    /// 是否尝试自毁
    /// </summary>
    public bool SelfDestruction { get; private set; }
    /// <summary>
    /// 自毁触发时间
    /// </summary>
    public string DestructionTime { get; private set; }
    /// <summary>
    /// 可选构造参数列表(仅提示用)
    /// </summary>
    public System.Collections.Generic.List<string> ConstructProperties { get; private set; }

    public const int __ID__ = -1136808417;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "BaseBuffName:" + BaseBuffName + ","
        + "BuffEffectType:" + BuffEffectType + ","
        + "Deleteable:" + Deleteable + ","
        + "Increaseable:" + Increaseable + ","
        + "HaveLifeCycle:" + HaveLifeCycle + ","
        + "Initiative:" + Initiative + ","
        + "InitiativeTime:" + InitiativeTime + ","
        + "SelfDestruction:" + SelfDestruction + ","
        + "DestructionTime:" + DestructionTime + ","
        + "ConstructProperties:" + Bright.Common.StringUtil.CollectionToString(ConstructProperties) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
